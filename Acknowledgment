Using ai

bookingDisplay.configure(state="disabled") #ai

#to change pages
def showFrame(frame):   #ai
    frame.tkraise()

from datetime import datetime #AI

#AI
for frame in (signInFrame, bookCourtFrame, paymentFrame):
    frame.grid(row=1, column=0, sticky="nsew")
def showFrame(frame):
    frame.tkraise()

userPassword = ctk.CTkEntry(inputFrame, width=400, height=40, font=("Arial", 14), show="*") #show was ai

#AI TO MAKE IT CENTRED
gridWrapper = ctk.CTkFrame(bookCourtFrame, fg_color="transparent")
gridWrapper.grid(row=1, column=0, pady=20)
gridWrapper.grid_columnconfigure(tuple(range(slot_count + 1)), weight=1)

#Generate court and slot times (HALF AI)
for court in range(courtCount):
    ctk.CTkLabel(gridWrapper, text=f"Court {court + 1}", fg_color="lightblue", width=100).grid(row=court + 1, column=0, padx=1, pady=1)

    rowButtons = []
    for slot in range(slotCount):
        btn = ctk.CTkButton(gridWrapper, text="", fg_color="green", width=100, height=40)
        btn.grid(row=court + 1, column=slot + 1, padx=1, pady=1)
        btn.configure(command=lambda c=court, s=slot: toggleSlot(c, s))
        rowButtons.append(btn)

    bookingButtons.append(rowButtons)
    slotButtons.update({(court, slot): btn for slot, btn in enumerate(rowButtons)})

#the confirm button (HALF AI)
bottomActionFrame = ctk.CTkFrame(bookCourtFrame)
bottomActionFrame.grid(row=2, column=0, pady=10, sticky="ew")
bottomActionFrame.grid_columnconfigure((0, 1), weight=1)


#ai
tab1 = ctk.CTkButton(app, text="Sign In", command=lambda: showFrame(signInFrame))
tab2 = ctk.CTkButton(app, text="Book Court", command=goToBookCourt)
tab3 = ctk.CTkButton(app, text="Payment", command=goToPaymentTab)


totalLabel = ctk.CTkLabel(bottomActionFrame, text="Total: $0", font=("Arial", 16))
confirmButton = ctk.CTkButton(bottomActionFrame, text="Confirm Booking", font=("Arial", 16), fg_color="blue", width=180, command=confirmBooking)
totalLabel.grid_remove()
confirmButton.grid_remove()